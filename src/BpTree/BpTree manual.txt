BpTree Manual
段宇轩

------ 更新记录 ------

2018.5.21
	1.添加了析构函数
	2.Manual中新增了关于修改 CMakeList.txt 的说明
	
2018.6.24
	1.添加了多线程支持（c++17, mutex, shared_mutex, thread）
	2.【重要】 API 用法有所变化，请务必关注！！！
	
2018.6.26
	1.添加了shared_mutex开关，适用于需要/不需要加锁的情况

------ 简介 ------

本 BpTree 为对 https://github.com/zcbenz/BPlusTree B+树类的简单包装。

------ 使用方法 ------

将 BpTree.hpp predefined.h bpt.h bpt.cc 拷至项目同一目录下，在其他文件中 #include "BpTree.hpp" 即可。
（此外，也许需要在 CMakeList.txt 中添加这些文件）

------ 类型定义 ------

key_type 为 int 型的包装，通过 .k 获得数据。
value_type 为1024字节 char 型的包装，通过 .str 获得数据。
以上两类在传参数时直接输入数或字符串即可。

------ API 列表 ------

【2018.6.26更新！！！】
BpTree (const char * filename, bool setMutex)
描述:
	构造函数。
返回值： 
	BpTree 实例。
参数：
	filename：
		用于存储B+树数据的文件路径。
		支持绝对路径。（e.g. C:\\Users\\admin\\Desktop\\BpTree.data）
		或相对路径。（e.g. ./data/BpTree.data）
		路径上的文件夹必须已经存在，但数据文件不必已经存在。
		数据采用单文件存储，为二进制文件形式。
		若文件已存在，BpTree 会读取目标文件中的数据。
	setMutex:
		true: BpTree会进行加锁操作
		false: BpTree不会进行加锁操作
		
		
bool find(const key_type & key)
描述：
	寻找 BpTree 中是否存在键为 key 的项。
返回值：
	true：存在。
	false：不存在。
参数：
	key：用于寻找的键。
	
		
value_type get(const key_type & key)
描述：
	获取键为 key 的项的值。
	【2018.6.24更新！！！】由于上锁原因，调用该函数前请先调用 find 确保记录存在。
返回值：
	value_type 实例，可用 .str 获取字符数组。
参数：
	key：用于获取的键。
	
	
bool insert(const key_type & key, const value_type & value)
描述：
	用来添加或更新项。
	【2018.6.24更新！！！】由于上锁原因，该函数取消更新项功能，仅作为添加项。
返回值：
	true：操作成功。
参数：
	key：添加项或更新项的键。
	value：添加项或更新项的值。
	
	
【2018.6.24更新！！！】bool update(const key_type & key, const value_type & value)
描述：
	用来更新项，调用该函数前请先调用 find 确保记录存在。
返回值：
	true：操作成功。
参数：
	key：添加项或更新项的键。
	value：添加项或更新项的值。
	
	
bool erase(const key_type & key)
描述：
	用来删除项。
返回值：
	true：操作成功。
	false：不存在键为 key 的项。
参数：
	key：即将删除的项。
	